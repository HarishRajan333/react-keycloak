{"ast":null,"code":"var _jsxFileName = \"/home/bassure/Desktop/New Folder/reactProjects/react-keycloak/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Keycloak from \"keycloak-js\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport Home from \"./Home\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initOptions = {\n  url: \"http://localhost:8080/auth\",\n  realm: \"bassure\",\n  clientId: \"ats-react\",\n  onLoad: \"login-required\",\n  KeycloakResponseType: \"code\"\n};\nlet keycloak = new Keycloak(initOptions);\nkeycloak.init({\n  onLoad: initOptions.onLoad,\n  KeycloakResponseType: \"code\"\n}).success(auth => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    console.info(\"Authenticated\");\n  }\n  setTimeout(() => {\n    keycloak.updateToken(70).success(refreshed => {\n      if (refreshed) {\n        console.debug(\"Token refreshed\" + refreshed);\n      } else {\n        console.warn(\"Token not refreshed, valid for \" + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + \" seconds\");\n      }\n    }).error(() => {\n      console.error(\"Failed to refresh token\");\n    });\n  }, 60000);\n}).error(() => {\n  console.error(\"Authenticated Failed\");\n});\nfunction App() {\n  var _keycloak$tokenParsed;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(ReactKeycloakProvider, {\n        authClient: keycloak,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"welcome \", keycloak === null || keycloak === void 0 ? void 0 : (_keycloak$tokenParsed = keycloak.tokenParsed) === null || _keycloak$tokenParsed === void 0 ? void 0 : _keycloak$tokenParsed.preferred_username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Keycloak","ReactKeycloakProvider","Home","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","initOptions","url","realm","clientId","onLoad","KeycloakResponseType","keycloak","init","success","auth","window","location","reload","console","info","setTimeout","updateToken","refreshed","debug","warn","Math","round","tokenParsed","exp","timeSkew","Date","getTime","error","App","_keycloak$tokenParsed","className","children","authClient","path","element","preferred_username","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bassure/Desktop/New Folder/reactProjects/react-keycloak/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Keycloak from \"keycloak-js\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport Home from \"./Home\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nlet initOptions = {\n  url: \"http://localhost:8080/auth\",\n  realm: \"bassure\",\n  clientId: \"ats-react\",\n  onLoad: \"login-required\",\n  KeycloakResponseType: \"code\",\n};\nlet keycloak = new Keycloak(initOptions);\n\nkeycloak\n  .init({ onLoad: initOptions.onLoad, KeycloakResponseType: \"code\" })\n  .success((auth) => {\n    if (!auth) {\n      window.location.reload();\n    } else {\n      console.info(\"Authenticated\");\n    }\n    setTimeout(() => {\n      keycloak\n        .updateToken(70)\n        .success((refreshed) => {\n          if (refreshed) {\n            console.debug(\"Token refreshed\" + refreshed);\n          } else {\n            console.warn(\n              \"Token not refreshed, valid for \" +\n                Math.round(\n                  keycloak.tokenParsed.exp +\n                    keycloak.timeSkew -\n                    new Date().getTime() / 1000\n                ) +\n                \" seconds\"\n            );\n          }\n        })\n        .error(() => {\n          console.error(\"Failed to refresh token\");\n        });\n    }, 60000);\n  })\n  .error(() => {\n    console.error(\"Authenticated Failed\");\n  });\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ReactKeycloakProvider authClient={keycloak}>\n          <Routes>\n            <Route\n              path=\"/home\"\n              element={\n                <Home>\n                  <h1>welcome {keycloak?.tokenParsed?.preferred_username}</h1>\n                </Home>\n              }\n            />\n          </Routes>\n        </ReactKeycloakProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}